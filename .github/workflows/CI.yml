name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runner-os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.runner-os }}

    permissions:
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Initialize CodeQL
      if: matrix.runner-os == 'ubuntu-latest'
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        config-file: ./.github/codeql/codeql-config.yml

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: dotnet format
      run: dotnet format src/System.CommandLine.Wrapper.sln --verify-no-changes

    - name: Restore dependencies
      run: dotnet restore src/System.CommandLine.Wrapper.sln

    - name: Build
      run: dotnet build src/System.CommandLine.Wrapper.sln --no-restore /p:TreatWarningsAsErrors=true

    - name: Unit Test
      run: dotnet test src/System.CommandLine.Wrapper.Tests/System.CommandLine.Wrapper.Tests.csproj --no-build --verbosity normal --logger:"junit;LogFilePath=unit-tests.xml" --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Copy Coverage To Predictable Location
      if: always() && matrix.runner-os == 'ubuntu-latest'
      run: cp coverage/**/coverage.cobertura.xml coverage/coverage.cobertura.xml

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: always() && matrix.runner-os == 'ubuntu-latest'
      with:
        filename: coverage/coverage.cobertura.xml
        badge: true
        format: 'markdown'
        output: 'both'

    # This is used by the subsequent publish-test-results.yml
    - name: Upload Unit Test Results
      if: always() && matrix.runner-os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Unit Test Results
        path: src/System.CommandLine.Wrapper.Tests/unit-tests.xml

    # This is used by the subsequent publish-test-results.yml
    - name: Upload Code Coverage Report
      if: always() && matrix.runner-os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Code Coverage Report
        path: code-coverage-results.md
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      if: matrix.runner-os == 'ubuntu-latest'

  upload-event-file:
    runs-on: ubuntu-latest
    steps:
    # This is used by the subsequent publish-test-results.yaml
    - name: Upload Event File
      uses: actions/upload-artifact@v4
      with:
        name: Event File
        path: ${{ github.event_path }}
